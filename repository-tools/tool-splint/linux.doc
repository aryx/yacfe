

*******************************************************************
SplintLinuxKernelHelper.h:

/*
 * Filename:    $Id: SplintLinuxKernelHelper.h,v 1.2 2004/03/03 18:30:53 bquinl01 Exp $
 * Description: Helps splint cope with Linux kernel headers.
 */

#ifndef __KERNEL__
#error This header should not be included in a non-kernel module.
#endif

#ifdef S_SPLINT_S

#ifdef access_ok
#undef access_ok
#endif

#define access_ok(type, addr, size) (addr = addr, TRUE)


#ifdef get_user
#undef get_user
#endif

#define get_user(x, ptr) (x = *ptr, 0)


#ifdef put_user
#undef put_user
#endif

#define put_user(x, ptr) (x = *ptr, 0)


#ifdef copy_from_user
#undef copy_from_user
#endif

#define copy_from_user(to, from, n) (memcpy(to, from, n), 0)


#ifdef copy_to_user
#undef copy_to_user
#endif

#define copy_to_user(to,from,n) (memcpy(to, from, n), 0)

#ifdef wait_event_interruptible
#undef wait_event_interruptible
#endif

#define wait_event_interruptible(wq, condition)


#ifdef SET_MODULE_OWNER
#undef SET_MODULE_OWNER
#endif

#define SET_MODULE_OWNER(dev)


#ifdef module_init
#undef module_init
#endif

typedef void* __splint_module_fptr;

#define __splint_module_use_fptr(fn)                \
  /*@unused@*/ static                               \
    __splint_module_fptr __splint_module_fptr##fn = \
      (__splint_module_fptr)fn

#define module_init(fn)  __splint_module_use_fptr(fn)


#ifdef module_exit
#undef module_exit
#endif

#define module_exit(fn) __splint_module_use_fptr(fn)


#ifdef MODULE_GENERIC_TABLE
#undef MODULE_GENERIC_TABLE
#endif

#define MODULE_GENERIC_TABLE(gtype,name)	\
static const unsigned long __module_##gtype##_size \
  __attribute__ ((unused)) = (const unsigned long)sizeof(struct gtype##_id); \
static const struct gtype##_id * __module_##gtype##_table \
  __attribute__ ((unused)) = name



#ifdef MODULE_DEVICE_TABLE
#undef MODULE_DEVICE_TABLE
#endif

#define MODULE_DEVICE_TABLE(type,name)		\
  MODULE_GENERIC_TABLE(type##_device,name)



#endif /* S_SPLINT_S */