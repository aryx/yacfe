#!/usr/bin/perl -w

#  * Copyright (C) 1998-1999 by Y. Padioleau, G. Cottenceau, P. Garcia, G. LeGuelvouit, Y. Zemali, S. Crunchant, X. Michard.
#  *
#   * Please check out README.
#  *
#  * Permission to use, copy, modify, and distribute this software and its
#  * documentation under the terms of the GNU General Public License is hereby 
#  * granted. No representations are made about the suitability of this software 
#  * for any purpose. It is provided "as is" without express or implied warranty.
#  * See the GNU General Public License for more details.
#  *


##############################################################################
sub Usage {
    print "Usage: cat fichiersimul | $0 --right ou --left \n";
}

@ARGV = ('-') unless @ARGV;
if ( ! (($ARGV[0] eq "--right") || ($ARGV[0] eq "--left"))) {
    Usage();
    exit 0;
}
##############################################################################

#regexp of a number (and its `recalling')
$NB="(\\d*)"; #print $NB, "\n";

while (<STDIN>) {
    $ligne = $_;
    s/\s//g;

    if(/POND=\($NB,$NB,$NB,$NB,$NB,$NB\)/) {

	foreach  $i (0..5) {
	    $cor = $i+1;
	    $new[$i] = $$cor; # can't process $($i+1) and dunno why
	    $old[$i] = $$cor;
	}

	foreach  $i (0..5) {
	    $left = ($i-1)%6;
	    $right = ($i+1)%6;
	    
	    if ($ARGV[0] eq "--right") {
		$sens = $left;
	    } else {
		$sens = $right;
	    }
	    if ($old[$sens] > 0) {
		$new[$i]++;
		$new[$sens]--;
	    }
	}
	print " POND=(";
	foreach  $i (0..4) {
	    print $new[$i];
	    print ", ";
	}
	print $new[5];
	print "),\n";
    } else {
	print $ligne;
    }
}
